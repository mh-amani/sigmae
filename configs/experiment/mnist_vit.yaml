# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  # - override /data: default
  - override /data/dataset: image/mnist_dataset
  - override /model: bart_softmax_bart_times_two
  # - override /callbacks: default
  # - override /trainer: default

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["mnist", "vit"]

trainer:
  min_epochs: 50
  max_epochs: 100

callbacks:
  supervision_scheduler:
    scheduler_xz: 
      hp_init: 0.0
      hp_end: 0.0
    scheduler_z:
      hp_init: 1.0
      hp_end: 1.0

data:
  supervision_ratio: [0, 1.00]
  batch_size: 210

model:
  optimizer:
    lr: 0.0001
  model_params:
    # to be manually set
    input_vocab_size: 17
    output_vocab_size: 10
    max_x_length: 20
    max_z_length: 60
    d_model: 512
  
  models_config:
    sequence_model_xz:
      config:
        max_lengths:
          input: ${model.model_params.max_x_length}
          output: ${model.model_params.max_z_length}
      model:
        config:
          vocab_size: ${model.model_params.input_vocab_size}
          # max_position_embeddings: ${input_max_position_embeddings}
      tokenizer:
        _target_: transformers.AutoTokenizer.from_pretrained
        pretrained_model_name_or_path: "./data/tokenizers/scan/commands"
        add_special_tokens: true
    
    sequence_model_zx:
      config:
        max_lengths:
          input: ${model.model_params.max_z_length}
          output: ${model.model_params.max_x_length}
      model:
        config:
          vocab_size: ${model.model_params.output_vocab_size}
          # max_position_embeddings: ${output_max_position_embeddings}
      tokenizer:
        _target_: transformers.AutoTokenizer.from_pretrained
        pretrained_model_name_or_path: "./data/tokenizers/scan/actions"
        add_special_tokens: true